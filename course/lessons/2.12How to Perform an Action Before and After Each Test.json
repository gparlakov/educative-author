{"components":[{"type":"MarkdownEditor","content":{"version":"2.0","text":"In the previous lesson, we saw that there was a clock install and uninstall actions that were done as part of the spec:\n\n```js\nit('should return 7 for a date 7 days ago', () => {\n    const clock = jasmine.clock();\n    ... // test code skipped\n\n    clock.uninstall();\n});\n```\n\nThat logic is not a part of the test. It's also repeated verbatim for each test. We can do better.\n\n## Jasmine hooks\n\nIt turns out there are a few functions we can call and let Jasmine know that we'd like it to perform a certain action before each test or after each test. Let's see how that might look like in the code playground below. _Notice the `spec/days-ago.spec.mjs` file._","mdHtml":"<p>In the previous lesson, we saw that there was a clock install and uninstall actions that were done as part of the spec:</p>\n<pre><code class=\"language-js\">it('should return 7 for a date 7 days ago', () =&gt; {\n    const clock = jasmine.clock();\n    ... // test code skipped\n\n    clock.uninstall();\n});\n</code></pre>\n<p>That logic is not a part of the test. It’s also repeated verbatim for each test. We can do better.</p>\n<h2>Jasmine hooks</h2>\n<p>It turns out there are a few functions we can call and let Jasmine know that we’d like it to perform a certain action before each test or after each test. Let’s see how that might look like in the code playground below. <em>Notice the <code>spec/days-ago.spec.mjs</code> file.</em></p>\n","comp_id":"DGr8-V-YM98NpzwJ8EtQT"},"iteration":2,"hash":1,"saveVersion":4},{"type":"WebpackBin","mode":"edit","content":{"version":5,"theme":"default","showLineNumbers":true,"showConsole":false,"hideResultOutput":true,"hideOutputUrl":true,"hideCodeView":false,"loaders":{"babel":{"title":"React","config":{"es2015":true,"react":true},"enabled":true},"dart":{"title":"Dart","config":{"dart":true},"enabled":false},"ts-react":{"title":"Typescript React","config":{"ts-react":true},"enabled":false},"elm":{"title":"Elm","config":{"elm":true},"enabled":false},"vue":{"title":"Vue.js","config":{"vue":true},"enabled":false},"gojs-react":{"title":"GoJS React","config":{"gojs-react":true},"enabled":false}},"npmPackages":{"react":"15.6.1","react-dom":"15.6.1"},"outputHeight":300,"selectedApiKeys":{},"selectedEnvVars":{},"outputLayout":"desktop","codeContents":{"module":"/","id":0,"selectedId":7182452402186,"maxId":8043528563029,"children":[{"id":7034465380789,"module":"spec","leaf":false,"collapsed":true,"children":[{"id":2580525033306,"module":"support","leaf":false,"collapsed":true,"children":[{"id":1926104079953,"module":"jasmine-browser.js","leaf":true,"data":{"content":"const specReporter = require('jasmine-spec-reporter').SpecReporter\n\nmodule.exports = {\n  srcDir: \"src\",\n  srcFiles: [\n    \"**/*.?(m)js\"\n  ],\n  specDir: \"spec\",\n  specFiles: [\n    \"**/*[sS]pec.?(m)js\"\n  ],\n  helpers: [\n    \"helpers/**/*.?(m)js\"\n  ],\n  random: false,\n  stopSpecOnExpectationFailure: false,\n  browser: {\n    name: \"headlessChrome\"\n  },\n  reporters: [new specReporter()]\n}\n","language":"jsx","staticFile":false,"hidden":false,"highlightedLines":""},"parentId":2580525033306}],"parentId":7034465380789},{"id":7182452402186,"module":"days-ago.spec.mjs","leaf":true,"data":{"content":"const { daysAgo } = require('./days-ago.js');\n\ndescribe('daysAgo', () => {\n  /** @type {jasmine.Clock} */\n  let clock;\n\n  beforeEach(() => {\n    clock = jasmine.clock();\n  })\n\n  afterEach(() => {\n    clock.uninstall();\n  })\n\n  it('should return 7 for a date 7 days ago', () => {\n    // arrange\n    clock.mockDate(new Date(2021, 8, 10));\n\n    // act\n    const ago = daysAgo(new Date(2021, 8, 3));\n\n    // assert\n    expect(ago).toBe(7);\n  });\n\n  it('should return 7 for a date 6 and 3/4 days ago', () => {\n    // arrange\n    clock.mockDate(new Date(2021, 8, 10));\n\n    // act\n    const ago = daysAgo(new Date(2021, 8, 3, 6, 0, 0));\n\n    // assert\n    expect(ago).toBe(7);\n  });\n\n  it('should return 7 for a date 7 and 1/4 days ago', () => {\n    // arrange\n    clock.mockDate(new Date(2021, 8, 10));\n\n    // act\n    const ago = daysAgo(new Date(2021, 8, 2, 18, 0, 0));\n\n    // assert\n    expect(ago).toBe(7);\n  });\n});\n","language":"javascript","staticFile":false,"hidden":false,"highlightedLines":"5-13"},"parentId":7034465380789}],"parentId":0},{"id":8043528563029,"module":"src","leaf":false,"collapsed":true,"children":[{"id":2206270725766,"module":"days-ago.mjs","leaf":true,"data":{"content":"/**\n * How many days ago was a date\n * @param {Date} date\n */\nexport function daysAgo(date) {\n  const nowMilliseconds = Date.now();\n  const dateMilliseconds = date.valueOf();\n\n  const agoMilliseconds = nowMilliseconds - dateMilliseconds;\n\n  const millisecondsInADay = 1000 * 60 * 60 * 24;\n  const daysAgo = agoMilliseconds / millisecondsInADay;\n  return Math.round(daysAgo);\n}\n","language":"javascript","staticFile":false,"hidden":false,"highlightedLines":""},"parentId":8043528563029}],"parentId":0}],"importedGithubPath":"https://github.com/gparlakov/jasmine-educative/tree/main/2.11.jasmine-hooks"},"dockerJob":{"key":"MAg0aPm2NgdrpUzSEzwM0","name":"Run jasmine-browser-runner console","inputFileName":"index.js","runScript":"cp -r /usercode/** .","ports":"3000","startScript":"cd /usr/local/educative/unit-testing-course && \nnpx nodemon -w /usercode --exec \"cp -r /usercode/** . && npx jasmine-browser-runner runSpecs\"","jobType":"Live","forceRelaunchOnRun":false,"forceRelaunchOnCompChange":true,"runInLiveContainer":true},"caption":"Example for beforeEach and afterEach Jasmine hooks","comp_id":"QGS5xPn-OX1MD9sFmoC_E"},"iteration":2,"hash":2,"saveVersion":4},{"type":"MarkdownEditor","mode":"edit","content":{"version":"2.0","text":"\n## Breakdown\n\nLooking at `spec/days-ago.spec.mjs` and the highlighted lines - 5 through 13 - we can see an example of using the [`beforeEach`](https://jasmine.github.io/api/edge/global.html#beforeEach) and [`afterEach`](https://jasmine.github.io/api/edge/global.html#afterEach).\n\n- ```js\n  let clock;\n  ```\n\n  We declare a variable that is accessible from all specs. That's because it's declared inside the `describe` callback function scope, and any `it` function has access to it via JavaScript's awesome feature: [Closures](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures).\n\n- ```js\n  beforeEach(() => {\n    clock = jasmine.clock();\n  });\n  ```\n  \n  We call `beforeEach` passing in a callback/function that does the setup - installing the clock and keeping a reference to that in the `clock` variable.\n  \n- ```js\n  afterEach(() => {\n    clock.uninstall();\n  });\n  ```\n\n  In an `afterEach` call, we tear down the clock to keep the global scope clean.\n\n## `beforeAll` and `afterAll`\n\nThere are two more hooks Jasmine exposes\n\n- The `beforeAll` hook runs once per `describe` suite before any of the specs in that suite.\n- The `afterAll` hook runs once per `describe` suite after all of the specs in that suite.\n\n## The official example\n\nAt the [Setup and Teardown](https://jasmine.github.io/tutorials/your_first_suite#section-Setup_and_Teardown) part of the Jasmine getting started guide you can see an example of all the above hooks aka global functions being used.\n\n## Exercise\n\nLet's use `beforeEach` and `afterEach` and repeat the exercise from the previous lesson.\n\nAdd tests for the `daysUntil` function in the `spec/days-until.mjs` file below:","mdHtml":"<h2>Breakdown</h2>\n<p>Looking at <code>spec/days-ago.spec.mjs</code> and the highlighted lines - 5 through 13 - we can see an example of using the <a href=\"https://jasmine.github.io/api/edge/global.html#beforeEach\"><code>beforeEach</code></a> and <a href=\"https://jasmine.github.io/api/edge/global.html#afterEach\"><code>afterEach</code></a>.</p>\n<ul>\n<li>\n<pre><code class=\"language-js\">let clock;\n</code></pre>\n<p>We declare a variable that is accessible from all specs. That’s because it’s declared inside the <code>describe</code> callback function scope, and any <code>it</code> function has access to it via JavaScript’s awesome feature: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures\">Closures</a>.</p>\n</li>\n<li>\n<pre><code class=\"language-js\">beforeEach(() =&gt; {\n  clock = jasmine.clock();\n});\n</code></pre>\n<p>We call <code>beforeEach</code> passing in a callback/function that does the setup - installing the clock and keeping a reference to that in the <code>clock</code> variable.</p>\n</li>\n<li>\n<pre><code class=\"language-js\">afterEach(() =&gt; {\n  clock.uninstall();\n});\n</code></pre>\n<p>In an <code>afterEach</code> call, we tear down the clock to keep the global scope clean.</p>\n</li>\n</ul>\n<h2><code>beforeAll</code> and <code>afterAll</code></h2>\n<p>There are two more hooks Jasmine exposes</p>\n<ul>\n<li>The <code>beforeAll</code> hook runs once per <code>describe</code> suite before any of the specs in that suite.</li>\n<li>The <code>afterAll</code> hook runs once per <code>describe</code> suite after all of the specs in that suite.</li>\n</ul>\n<h2>The official example</h2>\n<p>At the <a href=\"https://jasmine.github.io/tutorials/your_first_suite#section-Setup_and_Teardown\">Setup and Teardown</a> part of the Jasmine getting started guide you can see an example of all the above hooks aka global functions being used.</p>\n<h2>Exercise</h2>\n<p>Let’s use <code>beforeEach</code> and <code>afterEach</code> and repeat the exercise from the previous lesson.</p>\n<p>Add tests for the <code>daysUntil</code> function in the <code>spec/days-until.mjs</code> file below:</p>\n","cursorPosition":1484,"comp_id":"75VV337z1BpAsPWT1mNvD"},"iteration":3,"hash":3,"saveVersion":5},{"type":"WebpackBin","mode":"edit","content":{"version":5,"theme":"default","showLineNumbers":true,"showConsole":false,"hideResultOutput":true,"hideOutputUrl":true,"hideCodeView":false,"loaders":{"babel":{"title":"React","config":{"es2015":true,"react":true},"enabled":true},"dart":{"title":"Dart","config":{"dart":true},"enabled":false},"ts-react":{"title":"Typescript React","config":{"ts-react":true},"enabled":false},"elm":{"title":"Elm","config":{"elm":true},"enabled":false},"vue":{"title":"Vue.js","config":{"vue":true},"enabled":false},"gojs-react":{"title":"GoJS React","config":{"gojs-react":true},"enabled":false}},"npmPackages":{"react":"15.6.1","react-dom":"15.6.1"},"outputHeight":300,"selectedApiKeys":{},"selectedEnvVars":{},"outputLayout":"desktop","codeContents":{"module":"/","id":0,"selectedId":4344180893070,"maxId":1505222344334,"children":[{"id":6269293188341,"module":"spec","leaf":false,"collapsed":true,"children":[{"id":2419390603119,"module":"support","leaf":false,"collapsed":true,"children":[{"id":3670517084664,"module":"jasmine-browser.js","leaf":true,"data":{"content":"const specReporter = require('jasmine-spec-reporter').SpecReporter\n\nmodule.exports = {\n  srcDir: \"src\",\n  srcFiles: [\n    \"**/*.?(m)js\"\n  ],\n  specDir: \"spec\",\n  specFiles: [\n    \"**/*[sS]pec.?(m)js\"\n  ],\n  helpers: [\n    \"helpers/**/*.?(m)js\"\n  ],\n  random: false,\n  stopSpecOnExpectationFailure: false,\n  browser: {\n    name: \"headlessChrome\"\n  },\n  reporters: [new specReporter()]\n}\n","language":"jsx","staticFile":false,"hidden":false,"highlightedLines":""},"parentId":2419390603119}],"parentId":6269293188341},{"id":4344180893070,"module":"days-until.spec.mjs","leaf":true,"data":{"content":"\nimport { daysUntil } from '/__src__/days-until.mjs';\n\ndescribe('daysUntil', () => {\n\n  it('should return 5 for a date 5 days in the future', () => {\n    pending('replace with logic for 5 days in the future');\n  });\n\n  it('should return 5 for a date 5 and 1/4 days in the future', () => {\n    pending('replace with logic for 5 and 1/4 days in the future');\n\n  });\n\n  it('should return 5 for a date 4 and 3/4 days in the future', () => {\n    pending('replace with logic for 4 and 3/4 days in the future');\n  });\n});\n","language":"javascript","staticFile":false,"hidden":false,"highlightedLines":""},"parentId":6269293188341}],"parentId":0},{"id":1505222344334,"module":"src","leaf":false,"collapsed":true,"children":[{"id":5153485318669,"module":"days-until.mjs","leaf":true,"data":{"content":"/**\n * How many days ago was a date\n * @param {Date} date\n */\nexport function daysUntil(date) {\n  const nowMilliseconds = Date.now();\n  const dateMilliseconds = date.valueOf();\n\n  const until = dateMilliseconds - nowMilliseconds;\n\n  const millisecondsInADay = 1000 * 60 * 60 * 24;\n  const daysAgo = until / millisecondsInADay;\n  return Math.round(daysAgo);\n}\n","language":"javascript","staticFile":false,"hidden":false,"highlightedLines":""},"parentId":1505222344334}],"parentId":0}],"importedGithubPath":"https://github.com/gparlakov/jasmine-educative/tree/main/2.11.jasmine-hooks-exercise"},"dockerJob":{"key":"MAg0aPm2NgdrpUzSEzwM0","name":"Run jasmine-browser-runner console","inputFileName":"index.js","runScript":"cp -r /usercode/** .","ports":"3000","startScript":"cd /usr/local/educative/unit-testing-course && \nnpx nodemon -w /usercode --exec \"cp -r /usercode/** . && npx jasmine-browser-runner runSpecs\"","jobType":"Live","forceRelaunchOnRun":false,"forceRelaunchOnCompChange":true,"runInLiveContainer":true},"caption":"Test daysUntil using beforeEach and afterEach to set up and tear down jasmine.clock","comp_id":"osqyRiS8EuleeM6fW2WNl"},"iteration":2,"hash":4,"saveVersion":1}],"summary":{"title":"How to perform an action before and after each test","description":"In this lesson, we'll look into using Jasmine hooks to perform actions before or after tests.","tags":["beforeEach","afterEach","Jasmine hooks"],"titleUpdated":true}}